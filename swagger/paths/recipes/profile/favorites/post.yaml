tags:
  - Recipes
summary: Add recipe to favorites
operationId: addToFavorites
description: >
  Adds a recipe to the user's favorites list.
  Returns a paginated, filtered, and sorted list of favorite recipes,
  ordered by the sequence in which they were added (newest first).
  Supports filtering by category, ingredient, and name, plus sorting by predefined fields.

  **Example request:**
  `POST http://localhost:3000/api/recipes/profile/favorites`

security:
  - bearerAuth: []
requestBody:
  required: true
  content:
    application/json:
      schema:
        type: object
        required:
          - recipeId
        properties:
          recipeId:
            type: string
            description: The ID of the recipe to add to favorites
            pattern: "^[a-fd]{24}$"
            example: "6462a8f74c3d0ddd28898019"

parameters:
  - in: query
    name: page
    schema:
      type: integer
      default: 1
      minimum: 1
    description: Page number for pagination (default is 1)
  - in: query
    name: perPage
    schema:
      type: integer
      default: 12
      minimum: 1
      maximum: 50
    description: Number of items per page (default is 12, max 50)
  - in: query
    name: sortBy
    schema:
      type: string
      enum:
        - _id
        - title
        - cals
        - time
        - category
        - createdAt
        - updatedAt
      default: createdAt
    description: Field to sort the favorite recipes by
  - in: query
    name: sortOrder
    schema:
      type: string
      enum: [asc, desc]
      default: desc
    description: Sort order (ascending or descending)
  - in: query
    name: category
    schema:
      type: string
    description: Filter recipes by category (exact match)
  - in: query
    name: ingredient
    schema:
      type: string
    description: Filter recipes by ingredient name (partial match)
  - in: query
    name: name
    schema:
      type: string
    description: Filter recipes by recipe title/name (partial match)

responses:
  '200':
    description: 'Recipe added to favorites'
    content:
      application/json:
        schema:
          type: object
          required:
            - status
            - message
            - data
          properties:
            status:
              type: integer
              example: 200
            message:
              type: string
              example: 'Recipe added to favorites'
            data:
              type: object
              required:
                - recipes
                - page
                - perPage
                - totalItems
                - totalPages
                - hasPreviousPage
                - hasNextPage
              properties:
                recipes:
                  type: array
                  description: List of favorite recipes in order of addition
                  items:
                    $ref: '../../../../components/schemas/recipe.yaml'
                page:
                  type: integer
                  example: 1
                perPage:
                  type: integer
                  example: 12
                totalItems:
                  type: integer
                  example: 4
                totalPages:
                  type: integer
                  example: 1
                hasPreviousPage:
                  type: boolean
                  example: false
                hasNextPage:
                  type: boolean
                  example: false

  '400':
    description: 'Recipe ID is required'
    content:
      application/json:
        schema:
          type: object
          required:
            - status
            - message
          properties:
            status:
              type: integer
              example: 400
            message:
              type: string
              example: 'Recipe ID is required'

  '404':
    description: 'User or Recipe not found'
    content:
      application/json:
        schema:
          type: object
          required:
            - status
            - message
          properties:
            status:
              type: integer
              example: 404
            message:
              type: string
              example: 'User or Recipe not found'
  '500':
    $ref: '../../../../components/responses/500.yaml'
